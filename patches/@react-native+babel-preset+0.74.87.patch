diff --git a/node_modules/@react-native/babel-preset/src/configs/main.js b/node_modules/@react-native/babel-preset/src/configs/main.js
index 4a48373..72e7809 100644
--- a/node_modules/@react-native/babel-preset/src/configs/main.js
+++ b/node_modules/@react-native/babel-preset/src/configs/main.js
@@ -27,7 +27,7 @@ const loose = true;
 const defaultPlugins = [
   [require('@babel/plugin-syntax-flow')],
   [require('babel-plugin-transform-flow-enums')],
-  [require('@babel/plugin-transform-block-scoping')],
+  // [require('@babel/plugin-transform-block-scoping')],
   [require('@babel/plugin-proposal-class-properties'), {loose}],
   [require('@babel/plugin-transform-private-methods'), {loose}],
   [require('@babel/plugin-transform-private-property-in-object'), {loose}],
@@ -48,12 +48,12 @@ const getPreset = (src, options) => {
   const hasClass = isNull || src.indexOf('class') !== -1;
 
   const extraPlugins = [];
-  if (!options.useTransformReactJSXExperimental) {
-    extraPlugins.push([
-      require('@babel/plugin-transform-react-jsx'),
-      {runtime: 'automatic'},
-    ]);
-  }
+  // if (!options.useTransformReactJSXExperimental) {
+  //   extraPlugins.push([
+  //     require('@babel/plugin-transform-react-jsx'),
+  //     {runtime: 'automatic'},
+  //   ]);
+  // }
 
   if (
     !options.disableStaticViewConfigsCodegen &&
@@ -86,84 +86,70 @@ const getPreset = (src, options) => {
 
   // TODO(gaearon): put this back into '=>' indexOf bailout
   // and patch react-refresh to not depend on this transform.
-  extraPlugins.push([require('@babel/plugin-transform-arrow-functions')]);
+  // extraPlugins.push([require('@babel/plugin-transform-arrow-functions')]);
   
-  if (!isHermes) {
-    extraPlugins.push([require('@babel/plugin-transform-computed-properties')]);
-    extraPlugins.push([require('@babel/plugin-transform-parameters')]);
-    extraPlugins.push([
-      require('@babel/plugin-transform-shorthand-properties'),
-    ]);
-    extraPlugins.push([
-      require('@babel/plugin-proposal-optional-catch-binding'),
-    ]);
-    extraPlugins.push([require('@babel/plugin-transform-function-name')]);
-    extraPlugins.push([require('@babel/plugin-transform-literals')]);
-    extraPlugins.push([require('@babel/plugin-proposal-numeric-separator')]);
-    extraPlugins.push([require('@babel/plugin-transform-sticky-regex')]);
-  } else {
-    extraPlugins.push([
-      require('@babel/plugin-transform-named-capturing-groups-regex'),
-    ]);
-  }
-  if (!isHermesCanary) {
-    extraPlugins.push([
-      require('@babel/plugin-transform-destructuring'),
-      {useBuiltIns: true},
-    ]);
-  }
-  if (!isHermes && (isNull || hasClass || src.indexOf('...') !== -1)) {
-    extraPlugins.push(
-      [require('@babel/plugin-transform-spread')],
-      [
-        require('@babel/plugin-proposal-object-rest-spread'),
-        // Assume no dependence on getters or evaluation order. See https://github.com/babel/babel/pull/11520
-        {loose: true, useBuiltIns: true},
-      ],
-    );
-  }
-  if (isNull || src.indexOf('async') !== -1) {
-    extraPlugins.push([
-      require('@babel/plugin-proposal-async-generator-functions'),
-    ]);
-    extraPlugins.push([require('@babel/plugin-transform-async-to-generator')]);
-  }
-  if (
-    isNull ||
-    src.indexOf('React.createClass') !== -1 ||
-    src.indexOf('createReactClass') !== -1
-  ) {
-    extraPlugins.push([require('@babel/plugin-transform-react-display-name')]);
-  }
-  if (!isHermes && (isNull || src.indexOf('?.') !== -1)) {
-    extraPlugins.push([
-      require('@babel/plugin-proposal-optional-chaining'),
-      {loose: true},
-    ]);
-  }
-  if (!isHermes && (isNull || src.indexOf('??') !== -1)) {
-    extraPlugins.push([
-      require('@babel/plugin-proposal-nullish-coalescing-operator'),
-      {loose: true},
-    ]);
-  }
-  if (
-    !isHermes &&
-    (isNull ||
-      src.indexOf('??=') !== -1 ||
-      src.indexOf('||=') !== -1 ||
-      src.indexOf('&&=') !== -1)
-  ) {
-    extraPlugins.push([
-      require('@babel/plugin-proposal-logical-assignment-operators'),
-      {loose: true},
-    ]);
-  }
+  extraPlugins.push([
+    require('@babel/plugin-transform-named-capturing-groups-regex'),
+  ]);
 
-  if (options && options.dev && !options.useTransformReactJSXExperimental) {
-    extraPlugins.push([require('@babel/plugin-transform-react-jsx-source')]);
-    extraPlugins.push([require('@babel/plugin-transform-react-jsx-self')]);
+  if (!isHermesCanary) {
+    // extraPlugins.push([
+    //   require('@babel/plugin-transform-destructuring'),
+    //   {useBuiltIns: true},
+    // ]);
   }
+  // if (!isHermes && (isNull || hasClass || src.indexOf('...') !== -1)) {
+  //   extraPlugins.push(
+  //     [require('@babel/plugin-transform-spread')],
+  //     [
+  //       require('@babel/plugin-proposal-object-rest-spread'),
+  //       // Assume no dependence on getters or evaluation order. See https://github.com/babel/babel/pull/11520
+  //       {loose: true, useBuiltIns: true},
+  //     ],
+  //   );
+  // }
+  // if (isNull || src.indexOf('async') !== -1) {
+  //   extraPlugins.push([
+  //     require('@babel/plugin-proposal-async-generator-functions'),
+  //   ]);
+  //   extraPlugins.push([require('@babel/plugin-transform-async-to-generator')]);
+  // }
+  // if (
+  //   isNull ||
+  //   src.indexOf('React.createClass') !== -1 ||
+  //   src.indexOf('createReactClass') !== -1
+  // ) {
+  //   extraPlugins.push([require('@babel/plugin-transform-react-display-name')]);
+  // }
+  // if (!isHermes && (isNull || src.indexOf('?.') !== -1)) {
+  //   extraPlugins.push([
+  //     require('@babel/plugin-proposal-optional-chaining'),
+  //     {loose: true},
+  //   ]);
+  // }
+  // if (!isHermes && (isNull || src.indexOf('??') !== -1)) {
+  //   extraPlugins.push([
+  //     require('@babel/plugin-proposal-nullish-coalescing-operator'),
+  //     {loose: true},
+  //   ]);
+  // }
+  // if (
+  //   !isHermes &&
+  //   (isNull ||
+  //     src.indexOf('??=') !== -1 ||
+  //     src.indexOf('||=') !== -1 ||
+  //     src.indexOf('&&=') !== -1)
+  // ) {
+  //   extraPlugins.push([
+  //     require('@babel/plugin-proposal-logical-assignment-operators'),
+  //     {loose: true},
+  //   ]);
+  // }
+
+  // if (options && options.dev && !options.useTransformReactJSXExperimental) {
+  //   extraPlugins.push([require('@babel/plugin-transform-react-jsx-source')]);
+  //   extraPlugins.push([require('@babel/plugin-transform-react-jsx-self')]);
+  // }
 
   if (!options || options.enableBabelRuntime !== false) {
     // Allows configuring a specific runtime version to optimize output
